import { LRParser } from '@lezer/lr';
import { styleTags, tags } from '@lezer/highlight';

//import {Number, String} from "./my.grammar.terms"


const highlighting = styleTags({
  String: tags.string,
  Number: tags.number,
  "True False": tags.bool,
  PropertyName: tags.propertyName,
  Null: tags.null,
  ",": tags.separator,
  "[ ]": tags.squareBracket,
  "{ }": tags.brace
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "$bOYQPOOOOQO'#Cb'#CbOqQPO'#CeOyQPO'#CjOOQO'#Cq'#CqQOQPOOOOQO'#Cg'#CgO!QQPO'#CfO!VQPO'#CsOOQO,59P,59PO!_QPO,59PO!dQPO'#CvOOQO,59U,59UO!lQPO,59UOYQPO,59QOtQPO'#CkO!qQPO,59_OOQO1G.k1G.kOYQPO'#ClO!yQPO,59bOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",
  stateData: "#R~OcOSdOS~OQSORSOSSOTSOWQO]ROfPO~OVXOfUO~O[[O~PYOh^O~Oi_OVgX~OVaO~OibO[jX~O[dO~Oi_OVga~OibO[ja~O",
  goto: "!lkPPPPPPlPPlrxPPl|!SPPPP!YP!fPP!iXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "âš  JSON True False Null Number String } { Object Property PropertyName ] [ Array",
  maxTerm: 26,
  nodeProps: [
    ["isolate", -2,6,11,""],
    ["openedBy", 7,"{",12,"["],
    ["closedBy", 8,"}",13,"]"]
  ],
  propSources: [highlighting],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "&[~RaXY!WYZ!W]^!Wpq!Wrs!]|}!z}!O#P!P!Q#_!Q![#V![!]$S!}#O$X#P#Q$^#Y#Z$c#b#c%Q#h#i%i#o#p&Q#q#r&V~!]Oc~~!`TOr!]rs!os;'S!];'S;=`!t<%lO!]~!tOf~~!wP;=`<%l!]~#POi~~#SP!Q![#V~#[PT~!Q![#V~#bP!P!Q#e~#hTOY#eYZ#wZ;'S#e;'S;=`#|<%lO#e~#|Od~~$PP;=`<%l#e~$XOh~~$^O]~~$cO[~~$fP#T#U$i~$lP#`#a$o~$rP#g#h$u~$xP#X#Y${~%QOR~~%TP#i#j%W~%ZP#`#a%^~%aP#`#a%d~%iOS~~%lP#f#g%o~%rP#i#j%u~%xP#X#Y%{~&QOQ~~&VOW~~&[OV~",
  tokenizers: [0],
  topRules: {"JSON":[0,1]},
  tokenPrec: 0
});

export { parser };
